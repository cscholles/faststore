
/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
  ID: string
}

// Operation related types
export type StructuredProductSiteMetadataQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type StructuredProductSiteMetadataQueryQuery = { site: Maybe<{ siteMetadata: Maybe<{ siteUrl: Maybe<string> }> }> };


// Query Related Code

export const StructuredProductSiteMetadataQuery = {
  query: "query StructuredProductSiteMetadataQuery {\n  site {\n    siteMetadata {\n      siteUrl\n    }\n  }\n}\n",
  sha256Hash: "2913563707178ed9826fb719f97ecf01f114533386cfac4d03422b2d7af7a793",
  operationName: "StructuredProductSiteMetadataQuery",
}

