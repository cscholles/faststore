/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
}

// Operation related types
export type ProductPageQueryQueryVariables = Exact<{
  slug: Maybe<Scalars['String']>
  staticPath: Scalars['Boolean']
}>

export type ProductPageQueryQuery = {
  vtex: {
    product: Maybe<{
      productName: Maybe<string>
      linkText: Maybe<string>
      productId: Maybe<string>
      description: Maybe<string>
      items: Maybe<
        Array<
          Maybe<{
            itemId: Maybe<string>
            images: Maybe<
              Array<
                Maybe<{ imageUrl: Maybe<string>; imageText: Maybe<string> }>
              >
            >
            sellers: Maybe<
              Array<
                Maybe<{
                  sellerId: Maybe<string>
                  commercialOffer: Maybe<{
                    availableQuantity: Maybe<number>
                    price: Maybe<number>
                  }>
                }>
              >
            >
          }>
        >
      >
      categoryTree: Maybe<
        Array<Maybe<{ name: Maybe<string>; href: Maybe<string> }>>
      >
    }>
  }
}

// Query Related Code

export const ProductPageQuery = {
  query: undefined,
  sha256Hash:
    'f4b3463122e182b07d1e14bbad8b78be7b1048af7f15217707132b4509cd054c',
  operationName: 'ProductPageQuery',
}
